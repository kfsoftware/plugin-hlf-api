// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/evaluate": {
            "post": {
                "description": "Evaluates a transaction on the Hyperledger Fabric network without committing it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Evaluate a chaincode transaction",
                "parameters": [
                    {
                        "description": "Transaction Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    }
                }
            }
        },
        "/api/invoke": {
            "post": {
                "description": "Invokes a transaction on the Hyperledger Fabric network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Invoke a chaincode transaction",
                "parameters": [
                    {
                        "description": "Transaction Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.TransactionRequest": {
            "description": "Transaction request structure for invoking or evaluating chaincode",
            "type": "object",
            "properties": {
                "args": {
                    "description": "Arguments to pass to the chaincode function",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"asset1\"",
                        "\"value1\"]"
                    ]
                },
                "chaincode_name": {
                    "description": "Name of the chaincode to invoke",
                    "type": "string",
                    "example": "mycc"
                },
                "function": {
                    "description": "Function name to call in the chaincode",
                    "type": "string",
                    "example": "createAsset"
                }
            }
        },
        "api.TransactionResponse": {
            "description": "Response structure for chaincode transactions",
            "type": "object",
            "properties": {
                "block_number": {
                    "description": "Block number where the transaction was committed",
                    "type": "integer",
                    "example": 123
                },
                "error": {
                    "description": "Error message (if failed)",
                    "type": "string",
                    "example": "Invalid arguments"
                },
                "result": {
                    "description": "Result of the transaction (if successful)",
                    "type": "string",
                    "example": "{\"key\":\"value\"}"
                },
                "result_code": {
                    "description": "Result code from the chaincode",
                    "type": "integer",
                    "example": 200
                },
                "status": {
                    "description": "Status of the transaction (\"success\" or \"error\")",
                    "type": "string",
                    "example": "success"
                },
                "success": {
                    "description": "Whether the transaction was successful",
                    "type": "boolean",
                    "example": true
                },
                "tx_id": {
                    "description": "Transaction ID",
                    "type": "string",
                    "example": "tx123"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Hyperledger Fabric API",
	Description:      "API for interacting with Hyperledger Fabric network",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
